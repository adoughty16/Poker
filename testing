
from Game_state import Game_state 
import db_connect as database

# function to test game_state class 
def test_game_state():
    db = database.init()
    game_state_1 = Game_state(db, 'test_doc')
    if game_state_1.get_players(db) != []:
        print('FAILED PLAYER NAMES')
    else:
        print('PASSED PLAYER NAMES')
    # player hands 
    # community cards 
    if game_state_1.get_total_pot(db) != 0:
        print('FAILED')
    else:
        print('PASSED')
    if game_state_1.get_round_pot(db) != 0:
        print('FAILED')
    else:
        print('PASSED')
    expected_player_stacks = [1000, 1000, 1000, 1000]
    if game_state_1.get_player_stacks(db) != expected_player_stacks:
        print('FAILED')
        print(game_state_1.get_player_stacks(db))
    else:
        print('PASSED PLAYER STACKS')
    expected_total_call = 0 
    if game_state_1.get_total_call(db) != expected_total_call:
        print('FAILED')
        print(game_state_1.get_total_call(db))
    else:
        print('PASSED TOTAL_CALL')
    expected_waiting = False 
    if game_state_1.get_waiting(db) != expected_waiting:
        print('FAILED')
    else:
        print('PASSED WAITING')
    game_state_1.flip_waiting(db)
    if game_state_1.get_waiting(db) != True:
        print('FAILED')
    else:
        print('PASSED WAITING FLIP')
    if game_state_1.get_whose_turn(db) != 0:
        print('FAILED')
    else:
        print('PASSED')
    if game_state_1.get_bet(db) != 10:
        print('FAILED')
    else:
        print('PASSED')
    if game_state_1.get_minimum_call(db) != 10:
        print('FAILED')
    else:
        print('PASSED')
    expected_dealer = 3
    game_state_1.set_dealer(expected_dealer, db)
    if game_state_1.get_dealer(db) != expected_dealer:
        print('FAILED DEALER')
    else:
        print('PASSED DEALER')
    if game_state_1.get_actives(db) != [0, 1, 2, 3]:
        print('FAILED')
    else:
        print('PASSED')
    if game_state_1.get_round(db) != 'dealing':
        print('FAILED')
    else:
        print('PASSED')
    # player_decision fails! 
    if game_state_1.get_player_decision(db) != 'check':
        print('FAILED')
    else:
        print('PASSED')

def main():
    test_game_state()

main()